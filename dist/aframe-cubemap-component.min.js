!function(e){function t(n){if(r[n])return r[n].exports;var i=r[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,t),i.l=!0,i.exports}var r={};t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cubemap",{schema:{folder:{type:"string"},edgeLength:{type:"int",default:5e3},ext:{type:"string",default:"jpg"}},init:function(){const e=this.el,t=this.data;this.geometry=new THREE.BoxBufferGeometry(1,1,1);const r=THREE.ShaderLib.cube;this.material=new THREE.ShaderMaterial({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:r.uniforms,depthWrite:!1,side:THREE.BackSide}).clone(),Object.defineProperty(this.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),this.material.uniforms.envMap.value=new THREE.Texture,this.loader=new THREE.CubeTextureLoader,this.mesh=new THREE.Mesh(this.geometry,this.material),this.mesh.scale.set(t.edgeLength,t.edgeLength,t.edgeLength),e.setObject3D("cubemap",this.mesh)},update:function(e){function t(e){if(o!==this.data.folder)return void e.dispose();i.applyColorCorrection(e);const t=this.material.uniforms.envMap.value;this.material.uniforms.envMap.value=e,t&&t.dispose(),r.emit("cubemapLoaded")}const r=this.el,n=this.data,i=r.sceneEl.systems.renderer;if(n.edgeLength!==e.edgeLength&&this.mesh.scale.set(n.edgeLength,n.edgeLength,n.edgeLength),n.ext!==e.ext||n.folder!==e.folder){const o=n.folder;var s=["posx","negx","posy","negy","posz","negz"];s=s.map(function(e){return e+"."+n.ext}),this.loader.setPath(o),this.loader.load(s,t.bind(this))}},remove:function(){this.geometry.dispose(),this.material.uniforms.envMap.value.dispose(),this.material.dispose(),this.el.removeObject3D("cubemap")}})}]);